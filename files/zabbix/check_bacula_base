#!/bin/bash

psql='/usr/bin/psql'
grep='/bin/grep'
awk='/usr/bin/awk'
date='/bin/date'
rm='/bin/rm'
touch='/usr/bin/touch'
cut='/usr/bin/cut'
wc='/usr/bin/wc'
cat='/bin/cat'
uniq='/usr/bin/uniq'
sed='/bin/sed'
tr='/usr/bin/tr'

if [[ $( $( which date ) +%k ) -lt 10 || $( $( which date ) +%k ) -ge 18 ]] ; then
        echo "backup base OK: No read error in HNO" > /tmp/check_bacula_base.zabbix.result
        exit 0
fi

if [ ! $1 ] ; then
	DATABASE=$($psql -h localhost -U bacula -l | $grep "bc_" | $awk '{print $1}')
else 
	DATABASE=$1
fi

if [ $(echo $DATABASE | wc -m ) -le 1 ] ; then echo "postgres erreur" > /tmp/check_bacula_base.zabbix.result ; exit 0 ; fi

startjob=$($date +%s --date "$($date +%F --date "38 days ago") 21hours")

if [ -f /tmp/check_bacula_base.zabbix ] ; then $rm /tmp/check_bacula_base.zabbix ; fi
$touch /tmp/check_bacula_base.zabbix

for BDD in $DATABASE ; do
	hostname=$(hostname)
        if [ $hostname = 'bacdir01' -o $hostname = 'bacdir02' -o $hostname = 'bacdir03' -o $hostname = 'bacdir04' -o $hostname = 'bacdir05' ] ; then
                client=$(echo $BDD | $cut -d'_' -f3- )
        else
                client=$(echo $BDD | $cut -d'_' -f2- )
        fi
	for base in $($cat /usr/local/conf/bacula/clients/$client/*.conf | $grep "base_" | $grep 'Name' | $grep -v "^#" | $awk '{print $3}') ; do
		if [ $($psql -t -h localhost -U bacula $BDD -c "select job from job where job like '$base.%' and jobstatus = 'T' and jobtdate > $startjob ;" | $wc -m ) -le 1 ] ; then
			echo "Backup $base KO" >> /tmp/check_bacula_base.zabbix
		fi
	done
done

if [[ -s /tmp/check_bacula_base.zabbix ]] ; then
        $cat /tmp/check_bacula_base.zabbix | $uniq | $tr '\n'  ',' | $sed 's/,/, /g' > /tmp/check_bacula_base.zabbix.result
else
        echo "backup base OK" > /tmp/check_bacula_base.zabbix.result
fi
